{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import * as core from \"@actions/core\";\nimport * as github from \"@actions/github\";\n\nfunction setFailedWrongValue(input: string, value: string) {\n  core.setFailed(`Wrong value for the input '${input}': ${value}`);\n}\n\nenum Inputs {\n  Debug = \"debug\",\n  MaxAge = \"max-age\",\n  MaxTotalSize = \"max-total-size\",\n  Accessed = \"accessed\",\n  Created = \"created\",\n  Token = \"token\",\n}\n\nexport function parseHumanReadableTime(input: string): number {\n  const match = input.match(/^(\\d+)([dhwMy])$/);\n  if (!match) {\n    throw new Error(\n      `Invalid time format: ${input}. Expected format like \"7d\", \"1w\", \"2M\", \"1y\".`\n    );\n  }\n  const [, value, unit] = match;\n  const numValue = parseInt(value, 10);\n  switch (unit) {\n    case \"d\":\n      return numValue * 24 * 60 * 60;\n    case \"h\":\n      return numValue * 60 * 60;\n    case \"w\":\n      return numValue * 7 * 24 * 60 * 60;\n    case \"M\":\n      return numValue * 30 * 24 * 60 * 60;\n    case \"y\":\n      return numValue * 365 * 24 * 60 * 60;\n    default:\n      throw new Error(`Unknown time unit: ${unit}`);\n  }\n}\n\nexport function parseHumanReadableSize(input: string): number {\n  const match = input.match(/^(\\d+(?:\\.\\d+)?)\\s*(KB|MB|GB|TB)$/i);\n  if (!match) {\n    const unitMatch = input.match(/^(\\d+(?:\\.\\d+)?)\\s*([A-Za-z]+)$/);\n    if (unitMatch) {\n      throw new Error(\n        `Unknown size unit: ${unitMatch[2]}. Expected format like \"500MB\", \"1.5GB\", \"10TB\".`\n      );\n    }\n    throw new Error(\n      `Invalid size format: ${input}. Expected format like \"500MB\", \"1.5GB\", \"10TB\".`\n    );\n  }\n  const [, value, unit] = match;\n  const numValue = parseFloat(value);\n  switch (unit.toUpperCase()) {\n    case \"KB\":\n      return numValue * 1024;\n    case \"MB\":\n      return numValue * 1024 * 1024;\n    case \"GB\":\n      return numValue * 1024 * 1024 * 1024;\n    case \"TB\":\n      return numValue * 1024 * 1024 * 1024 * 1024;\n    default:\n      throw new Error(`Unknown size unit: ${unit}`);\n  }\n}\n\nexport async function run() {\n  try {\n    const debug = core.getInput(Inputs.Debug, { required: false }) === \"true\";\n    const maxAgeInput = core.getInput(Inputs.MaxAge, { required: true });\n    const maxTotalSizeInput = core.getInput(Inputs.MaxTotalSize, {\n      required: false,\n    });\n    const accessed =\n      core.getInput(Inputs.Accessed, { required: false }) === \"true\";\n    const created =\n      core.getInput(Inputs.Created, { required: false }) === \"true\";\n    const token = core.getInput(Inputs.Token, { required: true });\n\n    if (debug) {\n      console.log(`Debug mode enabled`);\n    }\n\n    if (!maxAgeInput) {\n      core.setFailed(\"Input 'max-age' is required and cannot be empty.\");\n      return;\n    }\n\n    if (!token) {\n      core.setFailed(\"Input 'token' is required and cannot be empty.\");\n      return;\n    }\n\n    let maxAge: number;\n    try {\n      maxAge = parseHumanReadableTime(maxAgeInput);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        core.setFailed(`Invalid 'max-age' input: ${error.message}`);\n      } else {\n        core.setFailed(`Invalid 'max-age' input: An unknown error occurred`);\n      }\n      return;\n    }\n\n    const maxDate = new Date(Date.now() - maxAge * 1000);\n\n    let maxTotalSize = Infinity;\n    if (maxTotalSizeInput) {\n      try {\n        maxTotalSize = parseHumanReadableSize(maxTotalSizeInput);\n      } catch (error) {\n        if (error instanceof Error) {\n          core.setFailed(`Invalid 'max-total-size' input: ${error.message}`);\n        } else {\n          core.setFailed(`Invalid 'max-total-size' input: ${String(error)}`);\n        }\n        return;\n      }\n    }\n\n    const octokit = github.getOctokit(token);\n\n    interface Cache {\n      id?: number | undefined;\n      ref?: string | undefined;\n      key?: string | undefined;\n      version?: string | undefined;\n      last_accessed_at?: string | undefined;\n      created_at?: string | undefined;\n      size_in_bytes?: number | undefined;\n    }\n\n    const results: Cache[] = [];\n    try {\n      for (let i = 1; i <= 100; i += 1) {\n        const { data: cachesRequest } =\n          await octokit.rest.actions.getActionsCacheList({\n            owner: github.context.repo.owner,\n            repo: github.context.repo.repo,\n            per_page: 100,\n            page: i,\n          });\n\n        if (cachesRequest.actions_caches.length == 0) {\n          break;\n        }\n\n        results.push(...cachesRequest.actions_caches);\n      }\n    } catch (error) {\n      console.log(\n        `Failed to fetch caches: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n      return;\n    }\n\n    if (debug) {\n      console.log(`Found ${results.length} caches`);\n    }\n\n    let totalSize = 0;\n    results.forEach((cache) => {\n      totalSize += cache.size_in_bytes || 0;\n    });\n\n    if (debug) {\n      console.log(`Total size of all caches: ${totalSize} bytes`);\n      console.log(`Max total size: ${maxTotalSize} bytes`);\n    }\n\n    results.sort((a, b) => (b.size_in_bytes || 0) - (a.size_in_bytes || 0));\n\n    for (const cache of results) {\n      if (\n        cache.last_accessed_at !== undefined &&\n        cache.created_at !== undefined &&\n        cache.id !== undefined\n      ) {\n        const accessedAt = new Date(cache.last_accessed_at);\n        const createdAt = new Date(cache.created_at);\n        const accessedCondition = accessed && accessedAt < maxDate;\n        const createdCondition = created && createdAt < maxDate;\n        const sizeCondition = totalSize > maxTotalSize;\n\n        if (accessedCondition || createdCondition || sizeCondition) {\n          if (debug) {\n            if (accessedCondition) {\n              console.log(\n                `Deleting cache ${cache.key}, last accessed at ${accessedAt} before ${maxDate}`\n              );\n            }\n            if (createdCondition) {\n              console.log(\n                `Deleting cache ${cache.key}, created at ${createdAt} before ${maxDate}`\n              );\n            }\n            if (sizeCondition) {\n              console.log(\n                `Deleting cache ${cache.key}, total size ${totalSize} exceeds ${maxTotalSize}`\n              );\n            }\n          }\n\n          try {\n            await octokit.rest.actions.deleteActionsCacheById({\n              per_page: 100,\n              owner: github.context.repo.owner,\n              repo: github.context.repo.repo,\n              cache_id: cache.id,\n            });\n            totalSize -= cache.size_in_bytes || 0;\n          } catch (error) {\n            console.log(`Failed to delete cache ${cache.key};\\n\\n${error}`);\n          }\n        } else if (debug) {\n          if (accessed) {\n            console.log(\n              `Skipping cache ${cache.key}, last accessed at ${accessedAt} after ${maxDate}`\n            );\n          }\n          if (created) {\n            console.log(\n              `Skipping cache ${cache.key}, created at ${createdAt} after ${maxDate}`\n            );\n          }\n        }\n      }\n    }\n  } catch (error) {\n    console.log(\n      `An error occurred: ${\n        error instanceof Error ? error.message : String(error)\n      }`\n    );\n    core.setFailed(\n      `Action failed: ${error instanceof Error ? error.message : String(error)}`\n    );\n  }\n}\n\nrun();\n"],"names":["parseHumanReadableSize","parseHumanReadableTime","run","setFailedWrongValue","input","value","core","setFailed","Inputs","match","Error","unit","numValue","parseInt","unitMatch","parseFloat","toUpperCase","debug","getInput","required","maxAgeInput","maxTotalSizeInput","accessed","created","token","console","log","maxAge","error","message","maxDate","Date","now","maxTotalSize","Infinity","String","octokit","github","getOctokit","results","i","data","cachesRequest","rest","actions","getActionsCacheList","owner","context","repo","per_page","page","actions_caches","length","push","totalSize","forEach","cache","size_in_bytes","sort","a","b","last_accessed_at","undefined","created_at","id","accessedAt","createdAt","accessedCondition","createdCondition","sizeCondition","key","deleteActionsCacheById","cache_id"],"mappings":"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"}